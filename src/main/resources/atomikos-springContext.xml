<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    ">

    <import resource="common-springContext.xml"/>

    <!-- Atomikos -->

    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
        <!-- when close is called, should we force transactions to terminate or not? -->
        <property name="forceShutdown" value="false"/>
    </bean>

    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
        <property name="transactionTimeout" value="300" />
    </bean>

    <bean id="jtaTransactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="atomikosTransactionManager" />
        <property name="userTransaction" ref="atomikosUserTransaction" />
    </bean>

    <tx:annotation-driven transaction-manager="jtaTransactionManager"/>

    <!-- ActiveMQ -->

    <bean id="xaFactory" class="org.apache.activemq.ActiveMQXAConnectionFactory">
        <property name="brokerURL" value="${brokerURL}" />
    </bean>

    <bean id="connectionFactory" class="com.atomikos.jms.AtomikosConnectionFactoryBean" init-method="init" destroy-method="close">
        <property name="uniqueResourceName" value="amq1" />
        <property name="xaConnectionFactory" ref="xaFactory" />
    </bean>

    <!--<bean id="connectionFactorySpring" class="org.springframework.jms.connection.SingleConnectionFactory">-->
        <!--<property name="targetConnectionFactory" ref="connectionFactory" />-->
    <!--</bean>-->

    <!-- MySQL -->

    <bean id="dataSource"
          class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init"
          destroy-method="close">
        <property name="uniqueResourceName">
            <value>Mysql</value>
        </property>
        <property name="xaDataSourceClassName">
            <value>com.mysql.jdbc.jdbc2.optional.MysqlXADataSource</value>
        </property>
        <property name="xaProperties">
            <props>
                <prop key="databaseName">${dbName}</prop>
                <prop key="serverName">${dbHost}</prop>
                <prop key="port">${dbPort}</prop>
                <prop key="user">${dbUser}</prop>
                <prop key="password">${dbPassword}</prop>
                <prop key="url">${dbURL}</prop>
            </props>
        </property>
    </bean>

    <!--<bean id="eventHandler" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">-->
        <!--<property name="transactionManager" ref="jtaTransactionManager" />-->
        <!--<property name="transactionAttributes">-->
            <!--<props>-->
                <!--<prop key="*">PROPAGATION_REQUIRED, -Exception</prop>-->
            <!--</props>-->
        <!--</property>-->
        <!--<property name="target" ref="eventHandlerTarget" />-->
    <!--</bean>-->

</beans>